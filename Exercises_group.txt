Corey:
1. Learn to create a dictionary and access its elements.
(Step 1.) Ceate a dictionary named student with the following key-value pairs: {"name": "John", "age": 25, "course": "Python"} 
(Step 2.) Print the value associated with the key "name".
(Step 3.) Update the "course" key to "Advanced Python" and print the updated dictionary.
2. Practice iterating over keys, values, and key-value pairs in a dictionary.
(Step 1.)Using the student dictionary from Exercise 1, iterate over its keys and print them.
(Step 2.) Iterate over its values and print them.
(Step 3.)Iterate over the key-value pairs and print them in the format "key: value".
3. Learn to work with nested dictionaries.
(Step 1.)Create a nested dictionary classroom with two student sub-dictionaries from Exercise 1(student1 and student2).
(Step 2.) Access and print the name of student2.
(Step 3.) Add a new key-value pair "grade": "A" to student1 and print the updated classroom dictionary.

Nick
4. Check for keys in a nested dictionary
(Step 1.) Using the classroom dictionary from Exercise 3, assign the student2 key to a string object.
(Step 2.) Print the "grade" key from the student 2 dictionary, using a default value if it does not exist.
5. Create a defaultdict and print the keys.
(Step 1.) Create a defaultdict using the defaultdict() function, and insert the default value(within the parenthesis) as F.
(Step 2.) Insert key-value pairs similar to student2 fron Exercise 3. 
(Step 3.) Without iterating over the values, print the values of "name", "age", "course", and "grade"
6. Dictionary Comprehension example
(Step 1.) Create two lists, one containing the keys for the dictionary from Exercise 1, and one list containing the values.
(Step 2.) Create a dictionary named student3 with the syntax dict(zip(keys, values)).
(Step 3.) Compare the values between student and student3.

Marc
7. Install and Import NumPy.
(Step 1.) To install NumPy: pip install numpy
(Step 2.) To import NumPy: import numpy as np
8. Create a 1D array named Gary that includes the numbers: 1, 8, 7, 6, 4.
(Step 1.) Import numpy in your code: import numpy as np
(Step 2.) Create the array: Gary = np.array([1, 8, 7, 6, 4])
9. Print a random integer using the Random Library.
(Step 1.) include the random library: import random
(Step 2.) Create a random integer: random_int = random.randint(1, 100)
(Step 3.) Print a random number: print("Random Integer:", random_int)

Mahin
10. Perform matrix multiplication using NumPy. Given two matrices A and B, compute the product C = A * B.
(Step 1.) Import NumPy.
(Step 2.) Define matrices A and B.
(Step 3.) Use np.dot() or @ operator for matrix multiplication.
(Step 4.) Print the resulting matrix C.
11. Calculate the mean and standard deviation of an array using NumPy.
(Step 1.) Import NumPy.
(Step 2.) Create an array.
(Step 3.) Use np.mean() and np.std() functions to calculate mean and standard deviation.
(Step 4.) Print the calculated values.
12. Reshape a 1D array into a 2D array using NumPy.
(Step 1.) Import NumPy.
(Step 2.) Create a 1D array.
(Step 3.) Use np.reshape() function to reshape the array.
(Step 4.) Print the reshaped array.